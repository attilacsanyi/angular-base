###############################################
# RESOURCES
###############################################

# Angular.io
# https://github.com/angular/angular/blob/master/.circleci/config.yml

# Medium: How we used CircleCI 2.0 to build and deploy an Angular app to AWS S3
# https://medium.freecodecamp.org/our-journey-for-using-circleci-2-0-to-build-and-deploy-an-angular-app-to-aws-s3-8e7ea3f51503

version: 2

###############################################
# VARIABLES
###############################################

# Image
var_00: &docker_image circleci/node:12.0.0
# Directories
var_01: &dist dist

# Cache variables
var_10: &cache_deps v1-angular-base-{{ .Branch }}-{{ checksum "yarn.lock" }}
var_11: &restore_dependencies
  restore_cache:
    keys:
      - *cache_deps
      - v1-angular-base-
var_12: &cache_dist v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

# Desired Docker image and working directory to each job
var_20: &job_defaults
  working_directory: ~/angular-base
  docker:
    - image: *docker_image

# Current branch name logger
var_30: &log_branch_name
  run:
    name: CURRENT BRANCH
    command: echo ${CIRCLE_BRANCH}

###############################################
# JOBS
###############################################

jobs:
  # The installing job
  install:
    <<: *job_defaults
    steps:
      - checkout
      - *log_branch_name
      - *restore_dependencies

      # Installing
      - run:
          name: INSTALLING
          command: yarn
      - save_cache:
          key: *cache_deps
          paths:
            - node_modules

  # The linting job
  lint:
    <<: *job_defaults
    steps:
      - checkout
      - *log_branch_name
      - *restore_dependencies

      # Linting
      - run:
          name: LINTING
          command: yarn lint

  # The testing job
  test:
    <<: *job_defaults
    steps:
      - checkout
      - *log_branch_name
      - *restore_dependencies

      # Testing
      - run:
          name: TESTING
          command: yarn ci-test

  # The building job
  build:
    <<: *job_defaults
    steps:
      - checkout
      - *log_branch_name
      - *restore_dependencies

      # Building
      - run:
          name: BUILDING (-> dist)
          command: yarn build-prod
      - save_cache:
          key: *cache_dist
          paths:
            - *dist

  # The deploy job
  deploy:
    <<: *job_defaults
    steps:
      - checkout
      - *log_branch_name
      - *restore_dependencies

      # Restoring dist
      - run:
          name: CACHE (<- dist)
          command: echo "Restoring dist..."
      - restore_cache:
          key: *cache_dist

      # Deploying
      - run:
          name: DEPLOYING
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN
            fi

###############################################
# WORKFLOWS
###############################################

workflows:
  version: 2
  angular-base:
    jobs:
      - install

      # lint & test running in parallel
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      # build only if lint & test were succesfull
      - build:
          requires:
            - lint
            - test

      # The deploy job will only run on the filtered branches and
      # require the build job to be successful before it starts
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
